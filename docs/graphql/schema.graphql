type Mutation {
  """
  An example field added by the generator
  """
  testField: String!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Query {
  """
  ツイート一覧を取得する
  """
  tweets(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): TweetConnection!
}

type Tweet {
  avatarAlt: String!
  avatarImg: String!
  img: String!
  imgAlt: String!
  name: String!
  text: String!
  tweetId: ID!
  tweetTime: String!
  userId: String!
}

"""
The connection type for Tweet.
"""
type TweetConnection {
  """
  A list of edges.
  """
  edges: [TweetEdge]

  """
  A list of nodes.
  """
  nodes: [Tweet]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type TweetEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Tweet
}